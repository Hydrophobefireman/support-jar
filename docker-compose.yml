version: "3"

services:
  # frontend:
  #   restart: unless-stopped
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - 127.0.0.1:11000:80
  #   env_file: ./frontend/.env

  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - 127.0.0.1:15000:5000
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      - db

  db:
    restart: unless-stopped
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: public
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  graphql-engine:
    image: hasura/graphql-engine:v2.35.0
    ports:
    - "127.0.0.1:8080:8080"
    depends_on:
    - db
    restart: unless-stopped
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://user:pass@db:5432/public
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://user:pass@db:5432/public
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log

volumes:
  postgres-data:
